name: Release Please

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      tag-name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: ruby
      - name: Find release PR
        id: find-pr
        run: |
          set -euo pipefail
          REPO="${GITHUB_REPOSITORY}"
          PR_JSON=$(gh pr list --repo "$REPO" --label "autorelease: pending" --json number --limit 1 || echo '[]')
          if ! command -v jq >/dev/null 2>&1; then
            echo "jq not found; cannot parse release PR JSON" >&2
            PR_NUMBER=""
          else
            PR_NUMBER=$(jq -r '.[0].number // ""' <<< "$PR_JSON")
          fi
          if [ -n "$PR_NUMBER" ]; then
            echo "Found release PR #$PR_NUMBER"
          else
            echo "No active release PR found."
          fi
          echo "pr-number=$PR_NUMBER" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Assign release PR to viamin
        if: steps.find-pr.outputs.pr-number != ''
        uses: actions/github-script@v6
        env:
          PR_NUMBER: ${{ steps.find-pr.outputs.pr-number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = Number(process.env.PR_NUMBER);
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              assignees: ['viamin']
            });
            core.info(`Assigned release PR #${prNumber} to viamin.`);


  publish:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release-created }}
    permissions:
      id-token: write # Mandatory for trusted publishing
      contents: write # Required for release
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - name: Set up Ruby
        uses: ruby/setup-ruby@44511735964dcb71245e7e55f72539531f7bc0eb
        with:
          bundler-cache: true
          ruby-version: ruby

      - name: Release gem
        uses: rubygems/release-gem@a25424ba2ba8b387abc8ef40807c2c85b96cbe32