name: Release Please

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write # Required to create releases and update changelog
      pull-requests: write # Required to create release PRs
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Create Release PR or Release
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: ruby
      - name: Find release PR
        id: find-pr
        run: |
          set -euo pipefail
          REPO="${GITHUB_REPOSITORY}"
          PR_JSON=$(gh pr list --repo "$REPO" --label "autorelease: pending" --json number --limit 1 || echo '[]')
          if ! command -v jq >/dev/null 2>&1; then
            echo "jq not found; cannot parse release PR JSON" >&2
            PR_NUMBER=""
          else
            PR_NUMBER=$(jq -r '.[0].number // ""' <<< "$PR_JSON")
          fi
          if [ -n "$PR_NUMBER" ]; then
            echo "Found release PR #$PR_NUMBER"
          else
            echo "No active release PR found."
          fi
          echo "pr-number=$PR_NUMBER" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Assign release PR to viamin
        if: steps.find-pr.outputs.pr-number != ''
        uses: actions/github-script@v6
        env:
          PR_NUMBER: ${{ steps.find-pr.outputs.pr-number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = Number(process.env.PR_NUMBER);
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              assignees: ['viamin']
            });
            core.info(`Assigned release PR #${prNumber} to viamin.`);


  publish:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    permissions:
      id-token: write # Mandatory for trusted publishing
      contents: write # Required for release
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        persist-credentials: false

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Release gem
      uses: rubygems/release-gem@v1